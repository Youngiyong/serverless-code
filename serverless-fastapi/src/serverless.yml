service: daangn-app
plugins:
  - serverless-python-requirements


frameworkVersion: "2"
configValidationMode: error
useDotenv: true
custom:
  pythonRequirements:
    dockerizePip: true
provider:
  name: aws
  runtime: python3.7
  region: ap-northeast-2
  stage: ${opt:stage, "dev"}
  lambdaHashingVersion : 20201221
  deploymentBucket:
    blockPublicAccess: true # Prevents public access via ACLs or bucket policies. Default is false
    name: ${env:DEPLOYMENT_BUCKET} # Deployment bucket name. Default is generated by the framework
    maxPreviousDeploymentArtifacts: 3 # On every deployment the framework prunes the bucket to remove artifacts older than this limit. The default is 5

  environment:
    STAGE: ${self:provider.stage}
    TZ: "Asia/Seoul"
    DEPLOYMENT_BUCKET: ${env:DEPLOYMENT_BUCKET}
    RDS_DATABASE: ${env:RDS_DATABASE}
    RDS_USERNAME: ${env:RDS_USERNAME}
    RDS_HOSTNAME: ${env:RDS_HOSTNAME}
    RDS_PORT: ${env:RDS_PORT}

package:
  exclude:
    - requirements.txt
    - package.json
    - package-lock.json
    - .serverless/**
    - venv/**
    - node_modules/**

functions:
  daangn:
    handler: main.handler
    events:
      - http:
          method: ANY
          path: /